import java.io.*;
import java.lang.reflect.Array;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

public class PIMCalc {
	public static void main(String[] args) {
		
		double[] trans1 = new double[2];
		double[] trans2 = new double[2];
		double[] trans3 = new double[2];
		double[] rcv1 = new double[2];
		double[] rcv2 = new double[2];
		double[] rcv3 = new double[2];
		
		List<Double> list = new ArrayList<Double>();
		
		File file = new File("Data.txt");
		BufferedReader reader = null;
		
		try (FileInputStream fis = new FileInputStream(file)) {
			reader = new BufferedReader(new FileReader(file));
			String text = null;
			
			while((text = reader.readLine()) != null) {
				list.add(Double.parseDouble(text));
			}
		} catch (IOException e) {
			e.printStackTrace();
		} finally {
			try {
				if (reader != null) {
					reader.close();
				}
			} catch (IOException e) {
				
			}
		}
		
		trans1[0] = list.get(0);
		trans1[1] = list.get(1);
		rcv1[0] = list.get(2);
		rcv1[1] = list.get(3);
		trans2[0] = list.get(4);
		trans2[1] = list.get(5);
		rcv2[0] = list.get(6);
		rcv2[1] = list.get(7);
		trans3[0] = list.get(8);
		trans3[1] = list.get(9);
		rcv3[0] = list.get(10);
		rcv3[1] = list.get(11);
		
int hits = 0;
		
		double[] pim1 = new double[2];
		double[] pim2 = new double[2];
		
		trans1[0] = trans1[0]*2;
		trans1[1] = trans1[1]*2;
		pim1[0] = trans1[0] - trans2[1];
		pim1[1] = trans1[1] - trans2[0];
		pim2[0] = trans1[0] - trans3[1];
		pim2[1] = trans1[1] - trans3[0];
		
		if(pim1[0] == rcv2[0]) hits++;
		if(pim1[0] == rcv2[1]) hits++;
		if(pim1[1] == rcv2[0]) hits++;
		if(pim1[1] == rcv2[1]) hits++;
		if(pim1[1] == rcv3[0]) hits++;
		if(pim1[1] == rcv3[1]) hits++;
		if(pim1[1] == rcv3[0]) hits++;
		if(pim1[1] == rcv3[1]) hits++;
		
		if(pim2[0] == rcv2[0]) hits++;
		if(pim2[0] == rcv2[1]) hits++;
		if(pim2[1] == rcv2[0]) hits++;
		if(pim2[1] == rcv2[1]) hits++;
		if(pim2[1] == rcv3[0]) hits++;
		if(pim2[1] == rcv3[1]) hits++;
		if(pim2[1] == rcv3[0]) hits++;
		if(pim2[1] == rcv3[1]) hits++;
		
		if(pim1[1] < rcv2[1] && pim1[1] > rcv2[0]) {
			hits++;
		}
		if(pim1[0] > rcv2[0] && pim1[0] < rcv2[1]) {
			hits++;
		}
		if(pim1[1] < rcv3[1] && pim1[1] > rcv3[0]) {
			hits++;
		}
		if(pim1[0] > rcv3[0] && pim1[0] < rcv3[1]) {
			hits++;
		}
		if(pim2[1] < rcv2[1] && pim2[1] > rcv2[0]) {
			hits++;
		}
		if(pim2[0] > rcv2[0] && pim2[0] < rcv2[1]) {
			hits++;
		}
		if(pim2[1] < rcv2[1] && pim2[1] > rcv2[0]) {
			hits++;
		}
		if(pim2[0] > rcv2[0] && pim2[0] < rcv2[1]) {
			hits++;
		}
		
		System.out.println(hits);
		
		/*double[] trans1 = new double[2];
		double[] trans2 = new double[2];
		double[] trans3 = new double[2];
		double[] rcv1 = new double[2];
		double[] rcv2 = new double[2];
		double[] rcv3 = new double[2];
		
		trans1[0] = 870;
		trans1[1] = 880;
		trans2[0] = 890;
		trans2[1] = 891.5;
		trans3[0] = 891.5;
		trans3[1] = 894;
		rcv1[0] = 825;
		rcv1[1] = 835;
		rcv2[0] = 845;
		rcv2[1] = 846.5;
		rcv3[0] = 846.5;
		rcv3[1] = 849;
		
		int hits = 0;
		
		double[] pim1 = new double[2];
		double[] pim2 = new double[2];
		
		trans1[0] = trans1[0]*2;
		trans1[1] = trans1[1]*2;
		pim1[0] = trans1[0] - trans2[1];
		pim1[1] = trans1[1] - trans2[0];
		pim2[0] = trans1[0] - trans3[1];
		pim2[1] = trans1[1] - trans3[0];
		
		if(pim1[0] == rcv2[0]) hits++;
		if(pim1[0] == rcv2[1]) hits++;
		if(pim1[1] == rcv2[0]) hits++;
		if(pim1[1] == rcv2[1]) hits++;
		if(pim1[1] == rcv3[0]) hits++;
		if(pim1[1] == rcv3[1]) hits++;
		if(pim1[1] == rcv3[0]) hits++;
		if(pim1[1] == rcv3[1]) hits++;
		
		if(pim2[0] == rcv2[0]) hits++;
		if(pim2[0] == rcv2[1]) hits++;
		if(pim2[1] == rcv2[0]) hits++;
		if(pim2[1] == rcv2[1]) hits++;
		if(pim2[1] == rcv3[0]) hits++;
		if(pim2[1] == rcv3[1]) hits++;
		if(pim2[1] == rcv3[0]) hits++;
		if(pim2[1] == rcv3[1]) hits++;
		
		if(pim1[1] < rcv2[1] && pim1[1] > rcv2[0]) {
			hits++;
		}
		if(pim1[0] > rcv2[0] && pim1[0] < rcv2[1]) {
			hits++;
		}
		if(pim1[1] < rcv3[1] && pim1[1] > rcv3[0]) {
			hits++;
		}
		if(pim1[0] > rcv3[0] && pim1[0] < rcv3[1]) {
			hits++;
		}
		if(pim2[1] < rcv2[1] && pim2[1] > rcv2[0]) {
			hits++;
		}
		if(pim2[0] > rcv2[0] && pim2[0] < rcv2[1]) {
			hits++;
		}
		if(pim2[1] < rcv2[1] && pim2[1] > rcv2[0]) {
			hits++;
		}
		if(pim2[0] > rcv2[0] && pim2[0] < rcv2[1]) {
			hits++;
		}
		
		System.out.println(hits);
		*/
	}
}
